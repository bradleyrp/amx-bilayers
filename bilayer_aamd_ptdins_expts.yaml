clear_restraints:
  quick: |
    import os
    os.system('rm -rf inputs/charmm/auto_ff')

atomistic_bilayer_restraints:
  tags:
    - aamd
    - tag_prelim
    - tested_else # tested with bilayer_control_aamd_test
  params: None
  extensions: "@extras/geometry_tools"
  quick: |
    from amx import *
    init()
    restraint_maker()
  settings:
    USAGE NOTES: |
      this method is designed to pre-make any lipid restraints you might want
      its product can be used by 
        (1) the bilayer maker's vacuum packing
        (2) the flat bilayer maker's leaflet-specific restraints
      the "wants" dictionary specifies the outputs and describes their restraints
      the deposit site holds the automatically generated force fields
      this method completely avoids using the "define posre" flags in GROMACS
      all restraints are explicit, but this means you should avoid "define posre" which will restrain water
      note that this experiment was copied nearly verbatim from the lipidome_expts.py
      the quick script restraint function has been generalized 
        and moved from the martini bundle to topology_tools.py
    force field: charmm                      # we always include the force field for the Landscape class
    base force field: "@charmm/charmm36.ff"  # source force field to modify
    deposit site: "@charmm/auto_ff"          # where to write new force fields (keys in wants)
    wants:
      charmm36_vacuum_pack.ff:
        - restraints:
            heavy: {'z':10}
          naming: same
          which: lipids
        - restraints:
            heavy: {'z':500}
          naming: same
          which: sterols
      charmm36_equilibrate.ff:
        - restraints:
            heavy: {'z':10}
            heavy: {'z':10}
          naming: same
          which: lipids
        - restraints:
            charmm_glycerol: {'z':1000}
            charmm_tails: {'z':1000}
          naming: same
          which: lipids
        - restraints:
            sterol_out: {'z':1000}
            sterol_in: {'z':1000}
          naming: same
          which: sterols

atomistic_bilayer:
  tags:
  - aamd
  - note_structure_repo
  script: scripts/bilayer-careful.py
  params: parameters-aamd.py
  extensions: 
    - "@extras"
    - "@bilayers/codes"
  settings:
    USAGE NOTES: |
      use this procedure to make a "free" bilayer
      this method packs lipids in vacuum with restraints
      requires restrains generated via a run named "generate_lipidome_restraints"
      this small test was the first test after porting the cgmd method into "new automacs"
      this method is largely deprecated by the bilayer-careful script used by bilayer_control_aamd_test
    step: bilayer
    shape:              flat            # initial mesh shape flat
    aspect:             1.0             # XY proportion for flat bilayers
    binsize:            1.2             # grid spacing for initial lipid configuration
    monolayer offset:   1.5             # initial distance between leaflets 
    monolayer top:      24              # number of lipids in the top leaflet
    monolayer bottom:   24              # number of lipids in the bottom leaflet (none for symmetric)
    # folder for lipid structures
    lipid structures: "@structure-repo/bilayers-aamd/lipid-structures"
    # colloquial types for different molecules
    landscape metadata: "@charmm/landscape.json" 
    # COMPOSITIONS (propotional -- see monolayer top and bottom above for exact counts)
    composition top:    
      DOPE: 200
      DOPS: 60
      PI2P: 40
      CHL1: 100
    composition bottom: 
      POPC: 300
      CHL1: 100
    # SOLVATION
    cation:             NA              # residue name for the cation (must be found in the ff)
    anion:              CL              # residue name for the anion (must be found in the ff)
    ionic strength:     0.150           # molar ionic strength
    sol:                SOL             # residue name for water
    atom resolution:    cgmd            # either cgmd or aamd
    water buffer:       8               # water-other gap distance in Angstroms (avoid waters in bilayer!)
    solvent:            spc216          # water box (must be copied via files)
    thickness:          12              # thickness of the box at the solvate step
                                        #   be careful with this. you can get widely varying levels of water
    # COPY DEPENDENCIES
    files: []
    sources: 
      - "@charmm/charmm36.ff"
      - "@charmm/auto_ff/charmm36_vacuum_pack.ff"
      - "@charmm/auto_ff/charmm36_equilibrate.ff"
    # FORCE FIELD (use GROMACS shared force fields or copy e.g. name.ff via sources)
    force field: charmm36
    force field upright: charmm36_vacuum_pack
    force field restrain: charmm36_equilibrate
    # INTEGRATOR PARAMETERS
    equilibration: 
      - npt-bilayer-short
      - npt-bilayer
    mdp specs:
      group: aamd
      mdps:
        input-em-steep-in.mdp: ['minimize',{'potential':'bilayer-pack','emtol':10,'screening':'off'}]
        input-md-vacuum-pack1-eq-in.mdp: [
          'vacuum-packing',{'nsteps':10000,'dt':0.001}]
        input-md-vacuum-pack2-eq-in.mdp: ['vacuum-packing',{'ref_p':'500.0 1.0'}]
        input-md-vacuum-pack3-eq-in.mdp: ['vacuum-packing']
        input-md-bilayer-s1-restr-eq-in.mdp: ['npt-bilayer-simple',
          {'dt':0.0001,'nsteps':50000,'compressibility':'0.0 4.5e-5',
            'restrain':'posre-com-only','tau_p':0.1}]
        input-md-bilayer-s2-restr-eq-in.mdp: ['npt-bilayer-simple',
          {'dt':0.0002,'nsteps':50000,'compressibility':'0.0 4.5e-5',
            'restrain':'posre-com-only','tau_p':0.5}]
        input-md-bilayer-s3-free-eq-in.mdp: ['npt-bilayer-simple',
          {'dt':0.0002,'nsteps':50000,'compressibility':'0.0 4.5e-5',
            'restrain':'posre-com-only','tau_p':0.5}]
        input-md-bilayer-s4-free-eq-in.mdp: ['npt-bilayer-simple',
          {'dt':0.001,'nsteps':50000,'compressibility':'0.0 4.5e-5',
            'restrain':'posre-com-only','tau_p':0.5}]
        input-md-bilayer-s5-free-eq-in.mdp: ['npt-bilayer-simple',
          {'dt':0.002,'nsteps':50000,'restrain':'posre-com-only','tau_p':0.5}]
        input-md-bilayer-eq-in.mdp: ['npt-bilayer',
          {'dt':0.002,'nsteps':100000,'restrain':'posre-com-only'}]
        input-md-in.mdp: ['npt-bilayer',{'restrain':'posre-com-only','nsteps':500000}]
    equilibrate_restrain: ['bilayer-s1-restr','bilayer-s2-restr']
    equilibrate_free: ['bilayer-s3-free','bilayer-s4-free','bilayer-s5-free','bilayer']
    equilibrate_restrain_final: "md-bilayer-s2-restr"
    maxwarn: 2

v562:
  extends: atomistic_bilayer
  script: scripts/bilayer-replicate.py
  settings:
    counterions header: False
    water: 60149
    thickness: 25
    step: solvate
    genion overrides:
      np: 308
      pq: 2
      nn: 396
      nq: -1
    cation: MG
    anion: CL
